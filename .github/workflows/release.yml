name: Release CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Aliyun Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push main Docker image
        if: endsWith(github.ref_name, '-server') || (!endsWith(github.ref_name, '-server') && !endsWith(github.ref_name, '-crawler'))
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            registry.cn-hangzhou.aliyuncs.com/corkine/mini-catch:${{ github.ref_name }}
            registry.cn-hangzhou.aliyuncs.com/corkine/mini-catch:latest
          build-args: |
            APP_VERSION=${{ github.ref_name }}

      - name: Build and push crawler Docker image
        if: endsWith(github.ref_name, '-crawler') || (!endsWith(github.ref_name, '-server') && !endsWith(github.ref_name, '-crawler'))
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.crawler
          push: true
          tags: |
            registry.cn-hangzhou.aliyuncs.com/corkine/mini-catch-crawler:${{ github.ref_name }}
            registry.cn-hangzhou.aliyuncs.com/corkine/mini-catch-crawler:latest
          build-args: |
            APP_VERSION=${{ github.ref_name }}

      - name: Trigger remote deployment
        if: endsWith(github.ref_name, '-server') || (!endsWith(github.ref_name, '-server') && !endsWith(github.ref_name, '-crawler'))
        env:
          SSH_DESTINATION: ${{ secrets.SSH_DESTINATION }}
        run: |
          wget https://github.com/corkine/ci-transfer/releases/latest/download/ci-transfer
          chmod +x ci-transfer
          echo "MiniCatch deployment trigger - ${{ github.ref_name }}" > mini-deployment-trigger.txt
          ./ci-transfer --source ./mini-deployment-trigger.txt --destination "$SSH_DESTINATION" --commands "/root/mini.sh"

      - name: Notice to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "text": "MiniCatch CI/CD Build ${{ job.status }} - Version: ${{ github.ref_name }} <${{ github.event.pull_request.html_url || github.event.head_commit.url }}| HERE>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK 