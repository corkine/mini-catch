# 使用官方 Go 镜像作为构建阶段
FROM golang:1.24-alpine AS builder

# 安装必要的构建工具
RUN apk add --no-cache git ca-certificates tzdata

# 设置工作目录
WORKDIR /app

# 复制 go mod 文件
COPY go.mod go.sum ./

# 设置 Go 私有仓库直连
ENV GOPRIVATE=git.mazhangjing.com
ENV GOPROXY=direct

# 下载依赖
RUN go mod download

# 复制源代码
COPY . .

# 构建爬虫应用
ARG APP_VERSION=dev
RUN go build -ldflags "-X 'main.Version=${APP_VERSION}'" -o mini4k-crawler ./cmd/crawler

# 使用 Alpine Linux 作为运行阶段
FROM alpine:latest

# 安装必要的运行时依赖
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont \
    && rm -rf /var/cache/apk/*

# 设置环境变量
ENV CHROME_BIN=/usr/bin/chromium-browser \
    CHROME_PATH=/usr/lib/chromium/ \
    PATH="/usr/lib/chromium/:$PATH" \
    TZ=Asia/Shanghai

# 创建非 root 用户
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# 设置工作目录
WORKDIR /app

# 从构建阶段复制二进制文件
COPY --from=builder /app/mini4k-crawler .

# 创建数据目录
RUN mkdir -p /app/data && chown -R appuser:appgroup /app

# 切换到非 root 用户
USER appuser

# 暴露端口（如果需要）
EXPOSE 8080

# 设置入口点
ENTRYPOINT ["./mini4k-crawler"] 